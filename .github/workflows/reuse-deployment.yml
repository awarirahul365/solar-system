name: Reuse Deployment workflow

on:
  workflow_call:
    inputs:
      mongo-db-uri:
        required: true
        type: string
      mongo-db-username:
        required: true
        type: string
      environment:
        required: true
        type: string
      k8s-path:
        required: true
        type: string
    secrets:
      azure-credential:
        required: true
      mongodb-password:
        required: true
      dockerusername:
        required: true

jobs:
  reuse-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{inputs.environment}}
    env:
      RESOURCE_GROUP_NAME: "monitoring-poc"
      CLUSTER_NAME: "elk-pilot"
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install CLI
        uses: azure/setup-kubectl@v4
        id: kubectl-install

      - uses: azure/login@v1
        with:
          creds: ${{secrets.azure-credential}}

      - uses: azure/aks-set-context@v3
        with:
          resource-group: ${{env.RESOURCE_GROUP_NAME}}
          cluster-name: ${{env.CLUSTER_NAME}}

      - name: Fetch Cluster details
        run: |
          kubectl get nodes

      - name: Check if Namespace Exists
        run: |
          kubectl get namespace ${{vars.NAMESPACE}} || kubectl create namespace ${{vars.NAMESPACE}}

      - name: Fetch IP dynamically
        run: |
          echo "INGRESS_IP=$(kubectl -n ingress-nginx get svc ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV

      - name: Replace Token
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: "_{_"
          tokenSuffix: "_}_"
          files: '["${{inputs.k8s-path}}/*.yaml"]'
        env:
          NAMESPACE: ${{vars.NAMESPACE}}
          REPLICAS: ${{vars.REPLICAS}}
          IMAGE: ${{secrets.dockerusername}}/solar-system
          INGRESS_IP: ${{env.INGRESS_IP}}

      - name: Check Files
        run: |
          cat ${{inputs.k8s-path}}/*.yaml
          cat ${{secrets.dockerusername}}/solar-system

      - name: Get Secrets
        run: |
          kubectl -n ${{vars.NAMESPACE}} create secret generic mongo-db-creds \
          --from-literal=MONGO_URI=${{inputs.mongo-db-uri}} \
          --from-literal=MONGO_USERNAME=${{inputs.mongo-db-username}} \
          --from-literal=MONGO_PASSWORD=${{secrets.mongodb-password}} \
          --save-config \
          --dry-run=client \
          -o yaml | kubectl apply -f -

      - name: Apply AKS
        run: |
          kubectl apply -f ${{inputs.k8s-path}}
